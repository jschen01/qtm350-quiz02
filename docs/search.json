[
  {
    "objectID": "life-gdp.html",
    "href": "life-gdp.html",
    "title": "Life Expectancy and GDP per Capita",
    "section": "",
    "text": "This page explores the relationship between life expectancy and GDP per capita using the Gapminder dataset. Generally, wealthier countries tend to have higher life expectancy, but the relationship may not be strictly linear."
  },
  {
    "objectID": "life-gdp.html#introduction",
    "href": "life-gdp.html#introduction",
    "title": "Life Expectancy and GDP per Capita",
    "section": "",
    "text": "This page explores the relationship between life expectancy and GDP per capita using the Gapminder dataset. Generally, wealthier countries tend to have higher life expectancy, but the relationship may not be strictly linear."
  },
  {
    "objectID": "life-gdp.html#data-analysis-and-visualization",
    "href": "life-gdp.html#data-analysis-and-visualization",
    "title": "Life Expectancy and GDP per Capita",
    "section": "Data Analysis and Visualization",
    "text": "Data Analysis and Visualization\n\n# Installing the required package\n!pip install pandas matplotlib seaborn gapminder\n\n# Import necessary libraries\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom gapminder import gapminder\n\n# Rename columns for better readability\ngapminder = gapminder.rename(columns={'lifeExp': 'life_expectancy',\n                                      'pop': 'population_millions', \n                                      'gdpPercap': 'gdp_per_capita'})\n\n# Convert population to millions\ngapminder['population_millions'] = gapminder['population_millions'] / 1_000_000\n\n# Create a DataFrame\ngapminder_df = pd.DataFrame(gapminder)\n\n# Plot life expectancy vs GDP per capita\nplt.figure(figsize=(10,6))\nsns.scatterplot(data=gapminder_df, x='gdp_per_capita', y='life_expectancy', hue='continent', alpha=0.7)\nplt.xscale('log')  # Log scale for better visualization\nplt.xlabel('GDP per Capita (Log Scale)')\nplt.ylabel('Life Expectancy (Years)')\nplt.title('Life Expectancy vs. GDP per Capita')\nplt.legend(title='Continent')\nplt.grid(True)\nplt.show()\n\n# Save the DataFrame as a CSV file\ngapminder_df.to_csv('gapminder.csv', index=False)\n\nRequirement already satisfied: pandas in /opt/anaconda3/lib/python3.12/site-packages (2.2.2)\nRequirement already satisfied: matplotlib in /opt/anaconda3/lib/python3.12/site-packages (3.8.4)\nRequirement already satisfied: seaborn in /opt/anaconda3/lib/python3.12/site-packages (0.13.2)\nCollecting gapminder\n  Using cached gapminder-0.1-py3-none-any.whl.metadata (1.5 kB)\nRequirement already satisfied: numpy&gt;=1.26.0 in /opt/anaconda3/lib/python3.12/site-packages (from pandas) (1.26.4)\nRequirement already satisfied: python-dateutil&gt;=2.8.2 in /opt/anaconda3/lib/python3.12/site-packages (from pandas) (2.9.0.post0)\nRequirement already satisfied: pytz&gt;=2020.1 in /opt/anaconda3/lib/python3.12/site-packages (from pandas) (2024.1)\nRequirement already satisfied: tzdata&gt;=2022.7 in /opt/anaconda3/lib/python3.12/site-packages (from pandas) (2023.3)\nRequirement already satisfied: contourpy&gt;=1.0.1 in /opt/anaconda3/lib/python3.12/site-packages (from matplotlib) (1.2.0)\nRequirement already satisfied: cycler&gt;=0.10 in /opt/anaconda3/lib/python3.12/site-packages (from matplotlib) (0.11.0)\nRequirement already satisfied: fonttools&gt;=4.22.0 in /opt/anaconda3/lib/python3.12/site-packages (from matplotlib) (4.51.0)\nRequirement already satisfied: kiwisolver&gt;=1.3.1 in /opt/anaconda3/lib/python3.12/site-packages (from matplotlib) (1.4.4)\nRequirement already satisfied: packaging&gt;=20.0 in /opt/anaconda3/lib/python3.12/site-packages (from matplotlib) (23.2)\nRequirement already satisfied: pillow&gt;=8 in /opt/anaconda3/lib/python3.12/site-packages (from matplotlib) (10.3.0)\nRequirement already satisfied: pyparsing&gt;=2.3.1 in /opt/anaconda3/lib/python3.12/site-packages (from matplotlib) (3.0.9)\nRequirement already satisfied: six&gt;=1.5 in /opt/anaconda3/lib/python3.12/site-packages (from python-dateutil&gt;=2.8.2-&gt;pandas) (1.16.0)\nUsing cached gapminder-0.1-py3-none-any.whl (32 kB)\nInstalling collected packages: gapminder\nSuccessfully installed gapminder-0.1\n\n[notice] A new release of pip is available: 24.3.1 -&gt; 25.0.1\n[notice] To update, run: pip install --upgrade pip"
  },
  {
    "objectID": "life-population.html",
    "href": "life-population.html",
    "title": "Life Expectancy and Population",
    "section": "",
    "text": "This page explores the relationship between life expectancy and population using the Gapminder dataset. While larger populations may indicate economic and social diversity, their direct impact on life expectancy varies by region and development status."
  },
  {
    "objectID": "life-population.html#introduction",
    "href": "life-population.html#introduction",
    "title": "Life Expectancy and Population",
    "section": "",
    "text": "This page explores the relationship between life expectancy and population using the Gapminder dataset. While larger populations may indicate economic and social diversity, their direct impact on life expectancy varies by region and development status."
  },
  {
    "objectID": "life-population.html#data-analysis-and-visualization",
    "href": "life-population.html#data-analysis-and-visualization",
    "title": "Life Expectancy and Population",
    "section": "Data Analysis and Visualization",
    "text": "Data Analysis and Visualization\n\n# Install required packages (if not already installed)\n!pip install pandas matplotlib seaborn gapminder\n\n# Import necessary libraries\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom gapminder import gapminder\n\n# Rename columns for better readability\ngapminder = gapminder.rename(columns={'lifeExp': 'life_expectancy',\n                                      'pop': 'population_millions', \n                                      'gdpPercap': 'gdp_per_capita'})\n\n# Convert population to millions\ngapminder['population_millions'] = gapminder['population_millions'] / 1_000_000\n\n# Create a DataFrame\ngapminder_df = pd.DataFrame(gapminder)\n\n# Plot life expectancy vs population\nplt.figure(figsize=(10,6))\nsns.scatterplot(data=gapminder_df, x='population_millions', y='life_expectancy', hue='continent', alpha=0.7)\nplt.xscale('log')  # Log scale for better visualization\nplt.xlabel('Population (Millions, Log Scale)')\nplt.ylabel('Life Expectancy (Years)')\nplt.title('Life Expectancy vs. Population')\nplt.legend(title='Continent')\nplt.grid(True)\nplt.show()\n\n# Save the DataFrame as a CSV file\ngapminder_df.to_csv('gapminder.csv', index=False)\n\nRequirement already satisfied: pandas in /opt/anaconda3/lib/python3.12/site-packages (2.2.2)\nRequirement already satisfied: matplotlib in /opt/anaconda3/lib/python3.12/site-packages (3.8.4)\nRequirement already satisfied: seaborn in /opt/anaconda3/lib/python3.12/site-packages (0.13.2)\nRequirement already satisfied: gapminder in /opt/anaconda3/lib/python3.12/site-packages (0.1)\nRequirement already satisfied: numpy&gt;=1.26.0 in /opt/anaconda3/lib/python3.12/site-packages (from pandas) (1.26.4)\nRequirement already satisfied: python-dateutil&gt;=2.8.2 in /opt/anaconda3/lib/python3.12/site-packages (from pandas) (2.9.0.post0)\nRequirement already satisfied: pytz&gt;=2020.1 in /opt/anaconda3/lib/python3.12/site-packages (from pandas) (2024.1)\nRequirement already satisfied: tzdata&gt;=2022.7 in /opt/anaconda3/lib/python3.12/site-packages (from pandas) (2023.3)\nRequirement already satisfied: contourpy&gt;=1.0.1 in /opt/anaconda3/lib/python3.12/site-packages (from matplotlib) (1.2.0)\nRequirement already satisfied: cycler&gt;=0.10 in /opt/anaconda3/lib/python3.12/site-packages (from matplotlib) (0.11.0)\nRequirement already satisfied: fonttools&gt;=4.22.0 in /opt/anaconda3/lib/python3.12/site-packages (from matplotlib) (4.51.0)\nRequirement already satisfied: kiwisolver&gt;=1.3.1 in /opt/anaconda3/lib/python3.12/site-packages (from matplotlib) (1.4.4)\nRequirement already satisfied: packaging&gt;=20.0 in /opt/anaconda3/lib/python3.12/site-packages (from matplotlib) (23.2)\nRequirement already satisfied: pillow&gt;=8 in /opt/anaconda3/lib/python3.12/site-packages (from matplotlib) (10.3.0)\nRequirement already satisfied: pyparsing&gt;=2.3.1 in /opt/anaconda3/lib/python3.12/site-packages (from matplotlib) (3.0.9)\nRequirement already satisfied: six&gt;=1.5 in /opt/anaconda3/lib/python3.12/site-packages (from python-dateutil&gt;=2.8.2-&gt;pandas) (1.16.0)\n\n[notice] A new release of pip is available: 24.3.1 -&gt; 25.0.1\n[notice] To update, run: pip install --upgrade pip"
  },
  {
    "objectID": "country.html",
    "href": "country.html",
    "title": "Country Analysis",
    "section": "",
    "text": "This page examines how life expectancy, GDP per capita, and population have changed over time for a specific country using the Gapminder dataset. Understanding these trends can help reveal patterns of economic and social development."
  },
  {
    "objectID": "country.html#introduction",
    "href": "country.html#introduction",
    "title": "Country Analysis",
    "section": "",
    "text": "This page examines how life expectancy, GDP per capita, and population have changed over time for a specific country using the Gapminder dataset. Understanding these trends can help reveal patterns of economic and social development."
  },
  {
    "objectID": "country.html#data-analysis-and-visualization",
    "href": "country.html#data-analysis-and-visualization",
    "title": "Country Analysis",
    "section": "Data Analysis and Visualization",
    "text": "Data Analysis and Visualization\n\n# Install required packages (if not already installed)\n!pip install pandas matplotlib seaborn gapminder\n\n# Import necessary libraries\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom gapminder import gapminder\n\n# Rename columns for better readability\ngapminder = gapminder.rename(columns={'lifeExp': 'life_expectancy',\n                                      'pop': 'population_millions', \n                                      'gdpPercap': 'gdp_per_capita'})\n\n# Convert population to millions\ngapminder['population_millions'] = gapminder['population_millions'] / 1_000_000\n\n# Create a DataFrame\ngapminder_df = pd.DataFrame(gapminder)\n\n# Select a specific country (e.g., United States)\ncountry = \"United States\"\ncountry_data = gapminder_df[gapminder_df['country'] == country]\n\n# Plot trends over time\nfig, ax1 = plt.subplots(figsize=(10,6))\n\n# Plot life expectancy\ntwin1 = ax1.twinx()\nax1.plot(country_data['year'], country_data['gdp_per_capita'], 'g-', label='GDP per Capita')\ntwin1.plot(country_data['year'], country_data['life_expectancy'], 'b-', label='Life Expectancy')\nax1.set_xlabel('Year')\nax1.set_ylabel('GDP per Capita', color='g')\ntwin1.set_ylabel('Life Expectancy (Years)', color='b')\nplt.title(f'Changes in Life Expectancy and GDP per Capita for {country}')\n\nfig.tight_layout()\nplt.show()\n\n# Save the DataFrame as a CSV file\ngapminder_df.to_csv('gapminder.csv', index=False)\n\nRequirement already satisfied: pandas in /opt/anaconda3/lib/python3.12/site-packages (2.2.2)\nRequirement already satisfied: matplotlib in /opt/anaconda3/lib/python3.12/site-packages (3.8.4)\nRequirement already satisfied: seaborn in /opt/anaconda3/lib/python3.12/site-packages (0.13.2)\nRequirement already satisfied: gapminder in /opt/anaconda3/lib/python3.12/site-packages (0.1)\nRequirement already satisfied: numpy&gt;=1.26.0 in /opt/anaconda3/lib/python3.12/site-packages (from pandas) (1.26.4)\nRequirement already satisfied: python-dateutil&gt;=2.8.2 in /opt/anaconda3/lib/python3.12/site-packages (from pandas) (2.9.0.post0)\nRequirement already satisfied: pytz&gt;=2020.1 in /opt/anaconda3/lib/python3.12/site-packages (from pandas) (2024.1)\nRequirement already satisfied: tzdata&gt;=2022.7 in /opt/anaconda3/lib/python3.12/site-packages (from pandas) (2023.3)\nRequirement already satisfied: contourpy&gt;=1.0.1 in /opt/anaconda3/lib/python3.12/site-packages (from matplotlib) (1.2.0)\nRequirement already satisfied: cycler&gt;=0.10 in /opt/anaconda3/lib/python3.12/site-packages (from matplotlib) (0.11.0)\nRequirement already satisfied: fonttools&gt;=4.22.0 in /opt/anaconda3/lib/python3.12/site-packages (from matplotlib) (4.51.0)\nRequirement already satisfied: kiwisolver&gt;=1.3.1 in /opt/anaconda3/lib/python3.12/site-packages (from matplotlib) (1.4.4)\nRequirement already satisfied: packaging&gt;=20.0 in /opt/anaconda3/lib/python3.12/site-packages (from matplotlib) (23.2)\nRequirement already satisfied: pillow&gt;=8 in /opt/anaconda3/lib/python3.12/site-packages (from matplotlib) (10.3.0)\nRequirement already satisfied: pyparsing&gt;=2.3.1 in /opt/anaconda3/lib/python3.12/site-packages (from matplotlib) (3.0.9)\nRequirement already satisfied: six&gt;=1.5 in /opt/anaconda3/lib/python3.12/site-packages (from python-dateutil&gt;=2.8.2-&gt;pandas) (1.16.0)\n\n[notice] A new release of pip is available: 24.3.1 -&gt; 25.0.1\n[notice] To update, run: pip install --upgrade pip"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "This site is the assignment for Quiz 2 in the course QTM 350 taught by professor Danilo Freire."
  },
  {
    "objectID": "about.html#about-this-website",
    "href": "about.html#about-this-website",
    "title": "About",
    "section": "",
    "text": "This site is the assignment for Quiz 2 in the course QTM 350 taught by professor Danilo Freire."
  }
]